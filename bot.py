from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

BOT_TOKEN = "7820376518:AAHdVcrAYHedsI_Xpz_SC5thpUXstLHVV5I"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ü–†–û–î–û–õ–ñ–ò–¢–¨"))
    await message.answer(
        "–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ Hush Agency! ‚ú®\n"
        "–ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–º–∏. –ï—Å–ª–∏ –≤—Å—ë –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –±–æ–ª—å—à–µü§ç\n"
        "–ì–æ—Ç–æ–≤–∞ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏? –ù–∞–∂–∏–º–∞–π ¬´–ü–†–û–î–û–õ–ñ–ò–¢–¨¬ª!",
        reply_markup=markup
    )

@dp.message_handler(lambda message: message.text == "–ü–†–û–î–û–õ–ñ–ò–¢–¨")
async def continue_step(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–î–ê–õ–¨–®–ï"))
    await message.answer(
        "–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å? üòä\n"
        "–ü—Ä–æ—Å—Ç–æ –æ–±—â–∞—Ç—å—Å—è –≤ –≤–∏–¥–µ–æ-—á–∞—Ç–µ 1:1 —Å –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–∞–º–∏! –ó–Ω–∞–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è ‚Äî —É —Ç–µ–±—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫. –¢—ã —Å–∞–º–∞ –∑–∞–¥–∞–µ—à—å –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è –∏ –¥–µ–ª–∞–µ—à—å —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ. üí´ –û–ø–ª–∞—Ç–∞ ‚Äî –æ—Ç $1 –∑–∞ –º–∏–Ω—É—Ç—É!\n\n"
        "‚ú® –ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã?\n"
        "üîπ –ë—ã—Ç—å —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç\n"
        "üîπ –ù–æ—É—Ç–±—É–∫ –∏–ª–∏ –ü–ö —Å —Ö–æ—Ä–æ—à–µ–π –∫–∞–º–µ—Ä–æ–π\n\n"
        "–ï—Å–ª–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ, –∂–º–∏ ¬´–î–ê–õ–¨–®–ï¬ª, –æ—Å—Ç–∞–≤–ª—è–π –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π! üíï",
        reply_markup=markup
    )

@dp.message_handler(lambda message: message.text == "–î–ê–õ–¨–®–ï")
async def ask_username(message: types.Message):
    await message.answer(
        "–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π Telegram @Username, –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏! üòä"
    )

@dp.message_handler(content_types=['text'])
async def collect_username(message: types.Message):
    username = message.text
    admin_chat_id = -4692476565
    await bot.send_message(admin_chat_id, f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É: {username}")
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É! üíï\n"
        "–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤—Å–µ –¥–µ—Ç–∞–ª–∏! üòä"
    )

if __name__ == "__main__":

    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    try:

        executor.start_polling(dp, skip_updates=True)

    except Exception as e:

        print(f"–û—à–∏–±–∫–∞: {e}")

import os
from flask import Flask
from threading import Thread
from bot import bot

app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

if __name__ == '__main__':
    print("Starting bot and Flask server...") 
    Thread(target=bot.infinity_polling, daemon=True).start()
    port = int(os.environ.get("PORT", 8080))  
    print(f"Running Flask server on port {port}")  
    app.run(host="0.0.0.0", port=port)

